import React, { useState, useEffect } from 'react'
import './App.css'

export default function App() {
  const [isConnected, setIsConnected] = useState(false)
  const [isCameraOn, setIsCameraOn] = useState(false)
  const [currentSign, setCurrentSign] = useState('')
  const [confidence, setConfidence] = useState(0)
  const [detectionHistory, setDetectionHistory] = useState([])

  // ูุญุงูุงุฉ ุชุญุฏูุซ ุงูุจูุงูุงุช (ูููู ุฑุจุทูุง ุจุงูุจูุงูุงุช ุงููุนููุฉ ูุงุญูุงู)
  useEffect(() => {
    if (!isCameraOn) return

    const interval = setInterval(() => {
      const signs = ['Hello', 'I love you', 'No', 'Okay', 'Please', 'Thank you', 'Yes']
      const randomSign = signs[Math.floor(Math.random() * signs.length)]
      const newConfidence = Math.random() * 100
      
      setCurrentSign(randomSign)
      setConfidence(newConfidence)

      // ุฅุถุงูุฉ ุงููุชูุฌุฉ ุฅูู ุงูุชุงุฑูุฎ
      if (newConfidence > 50) { // ููุท ุงููุชุงุฆุฌ ุงูููุซููุฉ
        const newDetection = {
          id: Date.now(),
          sign: randomSign,
          confidence: newConfidence.toFixed(1),
          timestamp: new Date().toLocaleTimeString('ar-SA')
        }
        setDetectionHistory(prev => [newDetection, ...prev.slice(0, 9)]) // ุงูุงุญุชูุงุธ ุจู 10 ูุชุงุฆุฌ ููุท
      }
    }, 3000)

    return () => clearInterval(interval)
  }, [isCameraOn])

  const toggleCamera = () => {
    setIsCameraOn(!isCameraOn)
    if (!isCameraOn) {
      setDetectionHistory([]) // ูุณุญ ุงูุชุงุฑูุฎ ุนูุฏ ุชุดุบูู ุงููุงููุฑุง
    }
  }

  const clearHistory = () => {
    setDetectionHistory([])
  }

  return (
    <div className="app-container">
      {/* Header */}
      <div className="app-header">
        <h1 className="app-title">
          ูุธุงู ุงูุชุนุฑู ุนูู ูุบุฉ ุงูุฅุดุงุฑุฉ
        </h1>
        <p className="app-subtitle">
          ุชูููุฉ ุฐููุฉ ููุชูุงุตู ูุน ุงูุตู ูุงูุจูู
        </p>
      </div>

      <div className="main-grid">
        
        {/* Main Video Section */}
        <div className="card video-section">
          <div className="video-controls-header">
            <div className="connection-status">
              <div className={`status-indicator ${isConnected ? 'connected' : ''}`} />
              <span className="status-text">
                {isConnected ? 'ูุชุตู' : 'ุบูุฑ ูุชุตู'}
              </span>
            </div>
            
            {/* ุฒุฑ ุชุดุบูู/ุฅููุงู ุงููุงููุฑุง */}
            <button 
              className={`camera-toggle-btn ${isCameraOn ? 'camera-on' : 'camera-off'}`}
              onClick={toggleCamera}
            >
              {isCameraOn ? '๐ข ุฅููุงู ุงููุงููุฑุง' : '๐ด ุชุดุบูู ุงููุงููุฑุง'}
            </button>
          </div>
          
          <div className="video-container">
            {isCameraOn ? (
              <img 
                className="video-stream"
                src="/video_feed" 
                alt="ุจุซ ุงูููุฏูู ุงููุจุงุดุฑ"
                onLoad={() => setIsConnected(true)}
                onError={() => setIsConnected(false)}
              />
            ) : (
              <div className="camera-off-placeholder">
                <div className="camera-off-icon">๐ท</div>
                <p>ุงููุงููุฑุง ูุชูููุฉ</p>
                <p>ุงุถุบุท ุนูู ุฒุฑ ุงูุชุดุบูู ูุจุฏุก ุงูุชุนุฑู</p>
              </div>
            )}
            
            {/* Overlay for video info only */}
            {isCameraOn && (
              <div className="video-overlay">
                <div className="video-controls">
                  <span className="video-info">ุงูุจุซ ุงููุจุงุดุฑ</span>
                </div>
              </div>
            )}
          </div>
          
          {/* ุฃุฒุฑุงุฑ ุงูุชุญูู ุงูุฅุถุงููุฉ ุชุญุช ุงูููุฏูู */}
          {isCameraOn && (
            <div className="additional-controls">
              <button className="control-btn">
                โธ๏ธ ุฅููุงู ูุคูุช
              </button>
              <button className="control-btn">
                ๐ท ุงูุชูุงุท ุตูุฑุฉ
              </button>
            </div>
          )}
        </div>


      </div>

      {/* Footer */}
      <div className="app-footer">
        <p>ุชู ุชุทููุฑ ูุฐุง ุงููุธุงู ุจุงุณุชุฎุฏุงู ุชูููุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงููุชูุฏูุฉ</p>
        <p>ยฉ 2024 ูุธุงู ุงูุชุนุฑู ุนูู ูุบุฉ ุงูุฅุดุงุฑุฉ - ุฌููุน ุงูุญููู ูุญููุธุฉ</p>
      </div>
    </div>
  )
}


